// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`'process' option should work with Async "preprocessor" Function option: errors 1`] = `[]`;

exports[`'process' option should work with Async "preprocessor" Function option: module 1`] = `
"// Imports
import ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from "../../src/runtime/getUrl.js";
var ___HTML_LOADER_IMPORT_0___ = new URL("./image.png", import.meta.url);
// Module
var ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);
var code = "<div>\\n  <p>Alexander Krasnoyarov</p>\\n  <img src=\\"" + ___HTML_LOADER_REPLACEMENT_0___ + "\\" alt=\\"alt\\" />\\n<div>\\n";
// Exports
export default code;"
`;

exports[`'process' option should work with Async "preprocessor" Function option: result 1`] = `
"<div>
  <p>Alexander Krasnoyarov</p>
  <img src="replaced_file_protocol_/webpack/public/path/image.png" alt="alt" />
<div>
"
`;

exports[`'process' option should work with Async "preprocessor" Function option: warnings 1`] = `[]`;

exports[`'process' option should work with the "preprocessor" option #2: errors 1`] = `[]`;

exports[`'process' option should work with the "preprocessor" option #2: module 1`] = `
"// Imports
import ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from "../../src/runtime/getUrl.js";
var ___HTML_LOADER_IMPORT_0___ = new URL("./image.png.webp", import.meta.url);
var ___HTML_LOADER_IMPORT_1___ = new URL("./image.png", import.meta.url);
// Module
var ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);
var ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);
var code = "<picture><source type=\\"image/webp\\" srcset=\\"" + ___HTML_LOADER_REPLACEMENT_0___ + "\\"><img src=\\"" + ___HTML_LOADER_REPLACEMENT_1___ + "\\"></picture>\\n";
// Exports
export default code;"
`;

exports[`'process' option should work with the "preprocessor" option #2: result 1`] = `
"<picture><source type="image/webp" srcset="replaced_file_protocol_/webpack/public/path/image.png.webp"><img src="replaced_file_protocol_/webpack/public/path/image.png"></picture>
"
`;

exports[`'process' option should work with the "preprocessor" option #2: warnings 1`] = `[]`;

exports[`'process' option should work with the "preprocessor" option: errors 1`] = `[]`;

exports[`'process' option should work with the "preprocessor" option: module 1`] = `
"// Imports
import ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from "../../src/runtime/getUrl.js";
var ___HTML_LOADER_IMPORT_0___ = new URL("./image.png", import.meta.url);
// Module
var ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);
var code = "<div>\\n  <p>Alexander Krasnoyarov</p>\\n  <img src=\\"" + ___HTML_LOADER_REPLACEMENT_0___ + "\\" alt=\\"alt\\" />\\n<div>\\n";
// Exports
export default code;"
`;

exports[`'process' option should work with the "preprocessor" option: result 1`] = `
"<div>
  <p>Alexander Krasnoyarov</p>
  <img src="replaced_file_protocol_/webpack/public/path/image.png" alt="alt" />
<div>
"
`;

exports[`'process' option should work with the "preprocessor" option: warnings 1`] = `[]`;

exports[`'process' option should work with the Async "preprocessor" Function option #2: errors 1`] = `[]`;

exports[`'process' option should work with the Async "preprocessor" Function option #2: module 1`] = `
"// Imports
import ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from "../../src/runtime/getUrl.js";
var ___HTML_LOADER_IMPORT_0___ = new URL("./image.png.webp", import.meta.url);
var ___HTML_LOADER_IMPORT_1___ = new URL("./image.png", import.meta.url);
// Module
var ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);
var ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);
var code = "<picture><source type=\\"image/webp\\" srcset=\\"" + ___HTML_LOADER_REPLACEMENT_0___ + "\\"><img src=\\"" + ___HTML_LOADER_REPLACEMENT_1___ + "\\"></picture>\\n";
// Exports
export default code;"
`;

exports[`'process' option should work with the Async "preprocessor" Function option #2: result 1`] = `
"<picture><source type="image/webp" srcset="replaced_file_protocol_/webpack/public/path/image.png.webp"><img src="replaced_file_protocol_/webpack/public/path/image.png"></picture>
"
`;

exports[`'process' option should work with the Async "preprocessor" Function option #2: warnings 1`] = `[]`;
